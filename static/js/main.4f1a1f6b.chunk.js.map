{"version":3,"sources":["Services/api.js","Components/Button/button.styled.js","Components/Button/button.js","Components/ImageGalleryItems/ImageGalleryItems.styled.js","Components/ImageGalleryItems/ImageGalleryItems.js","Components/ImageGalleryList/ImageGalleryList.styled.js","Components/ImageGalleryList/ImageGalleryList.js","Components/Loader/Loader.js","Components/Modal/Modal.styled.js","Components/Modal/Modal.js","Components/SearchBar/SearchBar.styled.js","Components/SearchBar/SearchBar.js","Components/App/App.js","index.js"],"names":["axios","defaults","baseURL","params","key","image_type","orientation","per_page","fetchImages","query","page","a","get","q","response","data","hits","Error","propTypes","PropTypes","string","isRequired","number","StyledLoadMoreBtn","styled","button","LoadMoreBtn","onClick","type","ImageGalleryItem","li","GalleryImage","img","ImageGalleryItems","webFormatUrl","largeImageUrl","tags","onImageClick","src","alt","ImageGalleryList","ul","ImageGallery","images","map","webformatURL","largeImageURL","OnLoading","LoadContainer","color","height","width","timeout","Component","div","Overlay","StyledModal","Modal","toggleModal","url","useEffect","window","addEventListener","clickOnEsc","e","code","target","currentTarget","SearchBarHeader","header","SearchBarForm","form","SearchBarButton","SearchBarButtonLabel","span","SearchFormInput","input","SearchBar","onSubmit","useState","searchQuery","setSearchQuery","preventDefault","autoComplete","autoFocus","placeholder","value","onChange","App","setImages","setQuery","setPage","isLoading","setIsLoading","largeImage","setLargeImage","showModal","setShowModal","then","prev","scrollTo","top","document","documentElement","scrollHeight","behavior","finally","toLowerCase","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f1a1f6b.chunk.js","sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '22670209-9efd588e2ff75ea334072990b';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  per_page: '12',\n};\n\nexport const fetchImages = async (query, page) => {\n  try {\n    const response = await axios.get('', {\n      params: {\n        page: page,\n        q: query,\n      },\n    });\n    return response.data.hits;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nfetchImages.propTypes = {\n  query: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const StyledLoadMoreBtn = styled.button`\n  padding: 8px 16px;\n  margin: 12px auto;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import { StyledLoadMoreBtn } from './button.styled';\nimport PropTypes from 'prop-types';\n\nexport const LoadMoreBtn = ({ onClick }) => {\n  return (\n    <StyledLoadMoreBtn type=\"button\" onClick={() => onClick()}>\n      Load more\n    </StyledLoadMoreBtn>\n  );\n};\n\nLoadMoreBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n    0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const GalleryImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { GalleryImage, ImageGalleryItem } from './ImageGalleryItems.styled';\n\nexport const ImageGalleryItems = ({ webFormatUrl, largeImageUrl, tags, onImageClick }) => {\n  return (\n    <ImageGalleryItem>\n      <GalleryImage src={webFormatUrl} alt={tags} onClick={() => onImageClick(largeImageUrl)} />\n    </ImageGalleryItem>\n  );\n};\n\nImageGalleryItems.propTypes = {\n  webFormatUrl: PropTypes.string.isRequired,\n  largeImageUrl: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { ImageGalleryItems } from 'Components/ImageGalleryItems/ImageGalleryItems';\nimport { ImageGalleryList } from './ImageGalleryList.styled';\n\nexport const ImageGallery = ({ images, onImageClick }) => {\n  return (\n    <ImageGalleryList>\n      {images.map(({ webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItems\n          key={webformatURL}\n          webFormatUrl={webformatURL}\n          largeImageUrl={largeImageURL}\n          tags={tags}\n          onImageClick={onImageClick}\n        />\n      ))}\n    </ImageGalleryList>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default class OnLoading extends Component {\n  //other logic\n  render() {\n    return (\n      <LoadContainer>\n        <Loader type=\"Hearts\" color=\"#3f51b5\" height={120} width={120} timeout={3000} />\n      </LoadContainer>\n    );\n  }\n}\n\nconst LoadContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const StyledModal = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { Overlay, StyledModal } from './Modal.styled';\n\nexport default function Modal({ toggleModal, url }) {\n  useEffect(() => {\n    window.addEventListener('keydown', clickOnEsc);\n    return () => {\n      window.addEventListener('keydown', clickOnEsc);\n    };\n  });\n\n  const clickOnEsc = e => {\n    e.code === 'Escape' && toggleModal();\n  };\n\n  const clickOnOverlay = e => {\n    e.target === e.currentTarget && toggleModal();\n  };\n\n  return (\n    <Overlay onClick={clickOnOverlay}>\n      <StyledModal>\n        <img src={url} alt=\"\" />\n      </StyledModal>\n    </Overlay>\n  );\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  url: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchBarForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchBarButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchBarButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport {\n  SearchBarButton,\n  SearchBarForm,\n  SearchBarHeader,\n  SearchBarButtonLabel,\n  SearchFormInput,\n} from './SearchBar.styled';\n\nexport default function SearchBar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const onInputChange = e => {\n    setSearchQuery(e.currentTarget.value);\n  };\n\n  const onInputSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <SearchBarHeader>\n      <SearchBarForm onSubmit={onInputSubmit}>\n        <SearchBarButton type=\"submit\">\n          <SearchBarButtonLabel>Search</SearchBarButtonLabel>\n        </SearchBarButton>\n\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={onInputChange}\n        />\n      </SearchBarForm>\n    </SearchBarHeader>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { fetchImages } from 'Services/api';\nimport { LoadMoreBtn } from 'Components/Button/button';\nimport { ImageGallery } from 'Components/ImageGalleryList/ImageGalleryList';\nimport OnLoading from 'Components/Loader/Loader';\nimport Modal from 'Components/Modal/Modal';\nimport SearchBar from 'Components/SearchBar/SearchBar';\nimport React, { useState, useEffect } from 'react';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [largeImage, setLargeImage] = useState('');\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    if (page === 1) {\n      setImages([]);\n    }\n\n    setIsLoading(true);\n\n    fetchImages(query, page)\n      .then(data => {\n        setImages(prev => [...prev, ...data]);\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .finally(setIsLoading(false));\n  }, [page, query]);\n\n  const onInputChange = query => {\n    setQuery(query.toLowerCase());\n    setPage(1);\n    // this.setState({ images: [], query: query, page: 1 });\n  };\n\n  const onImageClick = largeImageUrl => {\n    setLargeImage(largeImageUrl);\n    setShowModal(prev => !prev);\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={onInputChange}></SearchBar>\n\n      <ImageGallery images={images} onImageClick={onImageClick} />\n\n      {isLoading && <OnLoading />}\n\n      {images.length > 0 && (\n        <LoadMoreBtn\n          onClick={() => {\n            setPage(prev => prev + 1);\n          }}\n        />\n      )}\n\n      {showModal && (\n        <Modal\n          toggleModal={() => {\n            setShowModal(prev => !prev);\n          }}\n          url={largeImage}\n        />\n      )}\n    </>\n  );\n}\n","import App from 'Components/App/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}